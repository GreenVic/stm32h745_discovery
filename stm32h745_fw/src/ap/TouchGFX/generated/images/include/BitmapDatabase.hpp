// Generated by imageconverter. Please, do not edit!

#ifndef BITMAPDATABASE_HPP
#define BITMAPDATABASE_HPP

#include <touchgfx/hal/Types.hpp>
#include <touchgfx/Bitmap.hpp>

const uint16_t BITMAP_AI1_ID = 0; // Size: 300x129 pixels
const uint16_t BITMAP_AI2_ID = 1; // Size: 150x130 pixels
const uint16_t BITMAP_AI3_ID = 2; // Size: 150x140 pixels
const uint16_t BITMAP_AI4_ID = 3; // Size: 150x131 pixels
const uint16_t BITMAP_BLUE_ICONS_HOME_32_ID = 4; // Size: 30x29 pixels
const uint16_t BITMAP_BLUE_PAGEINDICATOR_DOT_INDICATOR_SMALL_HIGHLIGHT_ID = 5; // Size: 15x15 pixels
const uint16_t BITMAP_BLUE_PAGEINDICATOR_DOT_INDICATOR_SMALL_NORMAL_ID = 6; // Size: 15x15 pixels
const uint16_t BITMAP_BLUE_TEXTURES_CONCRETE_SEAMLESS_ID = 7; // Size: 400x400 pixels
const uint16_t BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID = 8; // Size: 60x60 pixels
const uint16_t BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID = 9; // Size: 60x60 pixels
const uint16_t BITMAP_DARK_BUTTONS_ROUND_EDGE_SMALL_ID = 10; // Size: 170x60 pixels
const uint16_t BITMAP_DARK_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID = 11; // Size: 170x60 pixels

namespace BitmapDatabase
{
#ifndef NO_USING_NAMESPACE_TOUCHGFX
using namespace touchgfx;
#endif

class BitmapData;
const touchgfx::Bitmap::BitmapData* getInstance();
uint16_t getInstanceSize();
}

#endif
