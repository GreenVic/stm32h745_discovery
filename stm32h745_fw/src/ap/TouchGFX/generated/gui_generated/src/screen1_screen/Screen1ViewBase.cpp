/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

Screen1ViewBase::Screen1ViewBase() :
    interaction2Counter(0),
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler),
    interaction1EndedCallback(this, &Screen1ViewBase::interaction1EndedCallbackHandler)
{
    box1.setPosition(0, 0, 480, 272);
    box1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));

    image1.setXY(90, 287);
    image1.setBitmap(Bitmap(BITMAP_AI1_ID));

    swipeContainer1.setXY(0, 0);

    swipeContainer1Page1.setPosition(0, 0, 250, 250);


    swipeContainer1.add(swipeContainer1Page1);

    swipeContainer1.setSwipeCutoff(50);
    swipeContainer1.setEndSwipeElasticWidth(50);
    swipeContainer1.setSelectedPage(0);

    buttonWithLabel1.setXY(155, 190);
    buttonWithLabel1.setBitmaps(Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_SMALL_ID), Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    buttonWithLabel1.setLabelText(TypedText(T_SINGLEUSEID1));
    buttonWithLabel1.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonWithLabel1.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonWithLabel1.setAlpha(0);
    buttonWithLabel1.setAction(buttonCallback);

    add(box1);
    add(image1);
    add(swipeContainer1);
    add(buttonWithLabel1);
}

void Screen1ViewBase::setupScreen()
{

}

//Handles delays
void Screen1ViewBase::handleTickEvent()
{
    View::handleTickEvent();
    if(interaction2Counter > 0)
    {
        interaction2Counter--;
        if(interaction2Counter == 0)
        {
            //Interaction5
            //When Interaction2 completed fade buttonWithLabel1
            //Fade buttonWithLabel1 to alpha:255 with LinearIn easing in 500 ms (30 Ticks)
            buttonWithLabel1.clearFadeAnimationEndedAction();
            buttonWithLabel1.startFadeAnimation(255, 30, EasingEquations::linearEaseIn);
        }
    }
}

//Called when the screen is done with transition/load
void Screen1ViewBase::afterTransition()
{
    //Interaction1
    //When screen is entered move image1
    //Move image1 to x:90, y:40 with LinearIn easing in 1000 ms (60 Ticks)
    image1.clearMoveAnimationEndedAction();
    image1.startMoveAnimation(90, 40, 60, EasingEquations::linearEaseIn, EasingEquations::linearEaseIn);
    image1.setMoveAnimationEndedAction(interaction1EndedCallback);
}

void Screen1ViewBase::interaction1EndedCallbackHandler(const touchgfx::MoveAnimator<touchgfx::Image>& comp)
{
    //Interaction2
    //When Interaction1 completed delay
    //Delay for 100 ms (6 Ticks)
    interaction2Counter = INTERACTION2_DURATION;
}

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel1)
    {
        //Interaction4
        //When buttonWithLabel1 clicked change screen to Screen2
        //Go to Screen2 with screen transition towards East
        application().gotoScreen2ScreenSlideTransitionEast();
    }
}
